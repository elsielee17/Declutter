n = n) %>%
ggplot(aes(x = design, y = rating,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96,
fill = design)) +
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
geom_bar(stat = "identity") +
facet_wrap(~relevant)
theme_minimal()
redraw_data %>%
mutate(relevant = ifelse(relevant == 0, "not_relevant", "yes_relevant")) %>%
group_by(design, relevant) %>%
summarise(n = n(),
rating = mean(yes_no_relevant),
se = sd(yes_no_relevant)/sqrt(n()),
n = n) %>%
geom_bar(stat = "identity",
width = 0.4)+
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_wrap(~Bar, nrow = 1) +
# label axis
labs(x = "design",
y = "relevancy scores for conclusion") +
facet_wrap(~relevant)
redraw_data %>%
mutate(relevant = ifelse(relevant == 0, "not_relevant", "yes_relevant")) %>%
group_by(design, relevant) %>%
summarise(n = n(),
rating = mean(yes_no_relevant),
se = sd(yes_no_relevant)/sqrt(n()),
n = n) %>%
ggplot(aes(design, rating, fill = design,
ymin = error - se * 1.96,
ymax = error + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4)+
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_wrap(~Bar, nrow = 1) +
# label axis
labs(x = "design",
y = "relevancy scores for conclusion") +
facet_wrap(~relevant)
redraw_data %>%
mutate(relevant = ifelse(relevant == 0, "not_relevant", "yes_relevant")) %>%
group_by(design, relevant) %>%
summarise(n = n(),
rating = mean(yes_no_relevant),
se = sd(yes_no_relevant)/sqrt(n()),
n = n) %>%
ggplot(aes(design, rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4)+
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_wrap(~Bar, nrow = 1) +
# label axis
labs(x = "design",
y = "relevancy scores for conclusion") +
facet_wrap(~relevant)
theme_minimal()
redraw_data %>%
mutate(relevant = ifelse(relevant == 0, "not_relevant_conclusions", "yes_relevant_conclusions")) %>%
group_by(design, relevant) %>%
summarise(n = n(),
rating = mean(yes_no_relevant),
se = sd(yes_no_relevant)/sqrt(n()),
n = n) %>%
ggplot(aes(design, rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4)+
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_wrap(~Bar, nrow = 1) +
# label axis
labs(x = "design",
y = "think of this as likelihood of participants writing a relevant vs irrelevant conclusion") +
facet_wrap(~relevant)
theme_minimal()
redraw_data %>%
mutate(relevant = ifelse(relevant == 0, "not_relevant_conclusions", "yes_relevant_conclusions")) %>%
group_by(design, relevant) %>%
summarise(n = n(),
rating = mean(frequency),
se = sd(frequency)/sqrt(n()),
n = n) %>%
ggplot(aes(design, rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4)+
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_wrap(~Bar, nrow = 1) +
# label axis
labs(x = "design",
y = "think of this as likelihood of participants writing a relevant vs irrelevant conclusion") +
facet_wrap(~relevant)
redraw <- read.csv("exp1_qual_conclusions_clean.csv")
redraw_long <- reshape (as.data.frame(redraw),
vary = c("design_s1","design_s2","design_s4","design_s5","design_s7","design_s8",
"design_s9","design_s10","design_s11","design_s12","design_s14","design_s15",
"design_s16","design_s17","design_s18","design_s19","design_s21","design_s28",
"design_s29","design_s30","design_s31","design_s32","design_s33","design_s34",
"order_s1","order_s2","order_s4","order_s5","order_s7","order_s8","order_s9",
"order_s10","order_s11","order_s12","order_s14","order_s15","order_s16",
"order_s17", "order_s18","order_s19","order_s21","order_s28","order_s29",
"order_s30","order_s31","order_s32","order_s33","order_s34",
"relevancy_s1","relevancy_s2","relevancy_s4","relevancy_s5","relevancy_s7",
"relevancy_s8","relevancy_s9","relevancy_s10","relevancy_s11","relevancy_s12",
"relevancy_s14","relevancy_s15","relevancy_s16","relevancy_s17", "relevancy_s18",
"relevancy_s19","relevancy_s21","relevancy_s28","relevancy_s29",
"relevancy_s30","relevancy_s31","relevancy_s32","relevancy_s33","relevancy_s34"),
direction = "long",
idvar = "ID",
sep = "_")
# only keeping the relevant columns
redraw_data <- redraw_long[,c(1, 4,14,15,16,17)]
colnames(redraw_data)[3] <- "p"
colnames(redraw_data)[6] <- "frequency"
redraw_data %>%
mutate(relevant = ifelse(relevant == 0, "not_relevant_conclusions", "yes_relevant_conclusions")) %>%
group_by(design, relevant) %>%
summarise(n = n(),
rating = mean(frequency),
se = sd(frequency)/sqrt(n()),
n = n) %>%
ggplot(aes(design, rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4)+
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_wrap(~Bar, nrow = 1) +
# label axis
labs(x = "design",
y = "think of this as likelihood of participants writing a relevant vs irrelevant conclusion") +
facet_wrap(~relevant)
theme_minimal()
redraw_data %>%
mutate(relevant = ifelse(relevant == 0, "not_relevant_conclusions", "yes_relevant_conclusions")) %>%
group_by(design, relevant) %>%
summarise(n = n(),
rating = mean(frequency),
se = sd(frequency)/sqrt(n()),
n = n) %>%
ggplot(aes(design, rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4)+
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_wrap(~Bar, nrow = 1) +
# label axis
labs(x = "design",
y = "frquency/likihood") +
facet_wrap(~relevant)
theme_minimal()
model <- lm(yes_no_relevant ~ design * relevancy + Error(p), family=binomial(logit), data = redraw_data)
model <- lm(frequency ~ design * relevancy + Error(p), family=binomial(logit), data = redraw_data)
model <- lm(frequency ~ design * relevanct + Error(p), family=binomial(logit), data = redraw_data)
model <- lm(frequency ~ design * relevant + Error(p), family=binomial(logit), data = redraw_data)
model <- lm(frequency ~ design * relevant, family=binomial(logit), data = redraw_data)
summary(model)
model <- glm(frequency ~ design * relevant, family=binomial(logit), data = redraw_data)
summary(model)
model <- glm(frequency ~ design * relevant, family=binomial(logit), data = redraw_data)
summary(model)
anova(model)
model <- glm(frequency ~ design * relevant, family=binomial(logit), data = redraw_data)
summary(model)
anova(model, test = 'Chisq')
summary(anova(model, test = 'Chisq'))
exp(1.25974)
exp1QualRate <- read.csv("exp1_qual_ratings_free_response.csv")
# turn into long table
exp1QualRate_long <- gather(exp1QualRate, design, response, cluttered, decluttered, focused)
View(exp1QualRate_long)
exp1QualRate <- read.csv("exp1_qual_ratings_free_response.csv")
# turn into long table
exp1QualRate_long <- gather(exp1QualRate, design, response, cluttered, decluttered, focused)
View(exp1QualRate_long)
colnames(exp1QualRate_long)
exp1QualRate_long %>%
group_by(topic, sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n()))
exp1QualRate_long %>%
filter(category != "ignoreThis") %>%
group_by(topic, sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n()))
exp1QualRate_long %>%
filter(category != "ignoreThis") %>%
group_by(topic, sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, fill = sentiment,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4)+
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_grid(vars(sentiment), vars(category)) +
# label axis
labs(x = "design",
y = "rating") +
theme_minimal()
exp1QualRate_long %>%
filter(category != "ignoreThis") %>%
group_by(topic, sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, y = rating, fill = sentiment,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4) +
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_grid(vars(sentiment), vars(category)) +
# label axis
labs(x = "design",
y = "rating") +
theme_minimal()
exp1QualRate_long %>%
filter(category != "ignoreThis") %>%
group_by(sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, y = rating, fill = sentiment,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4) +
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_grid(vars(sentiment), vars(category)) +
# label axis
labs(x = "design",
y = "rating") +
theme_minimal()
exp1QualRate_long %>%
filter(category != "ignoreThis") %>%
group_by(sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, y = rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4) +
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_grid(vars(sentiment), vars(category)) +
# label axis
labs(x = "design",
y = "rating") +
theme_minimal()
exp1QualRate_long %>%
filter(category != "ignoreThis") %>%
group_by(sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, y = rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4) +
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_grid(vars(sentiment), vars(category)) +
# label axis
labs(x = "design",
y = "rating")
model <- glm(response ~ sentiment * design * category, family=binomial(logit), data = exp1QualRate)
model <- glm(response ~ sentiment * design * category, family=binomial(logit), data = exp1QualRate_long)
summary(model)
anova(model, test = 'Chisq')
exp1QualRate <- read.csv("exp1_qual_ratings_free_response.csv")
# turn into long table
exp1QualRate_long <- gather(exp1QualRate, design, response, cluttered, decluttered, focused)
exp1QualRate_long <- exp1QualRate_long %>%
filter(category != "ignoreThis")
model <- glm(response ~ sentiment * design * category, family=binomial(logit), data = exp1QualRate_long)
summary(model)
anova(model, test = 'Chisq')
exp1QualRate_long %>%
group_by(sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, y = rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4) +
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_grid(vars(sentiment), vars(category)) +
# label axis
labs(x = "design",
y = "frequency")
exp1QualRate_long %>%
group_by(sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n()))
exp1QualRate_long %>%
filter(category == "Aesthetic")
group_by(sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, y = rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4) +
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_grid(vars(sentiment)) +
# label axis
labs(x = "design",
y = "frequency")
exp1QualRate_long %>%
filter(category == "Aesthetic") %>%
group_by(sentiment, design, category) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, y = rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4) +
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_wrap(~sentiment) +
# label axis
labs(x = "design",
y = "frequency")
exp1QualRate_long %>%
filter(category == "Aesthetic") %>%
group_by(sentiment, design) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, y = rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4) +
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_wrap(~sentiment) +
# label axis
labs(x = "design",
y = "frequency")
exp1QualRate_long %>%
filter(category == "Aesthetic")
exp1QualRate_long %>%
filter(category == "aesthetic") %>%
group_by(sentiment, design) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, y = rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4) +
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
facet_wrap(~sentiment) +
# label axis
labs(x = "design",
y = "frequency")
anova(model, test = 'Chisq')a <-
a <- anova(model, test = 'Chisq')
TukeyHSD(a,"design")
summary(glht(model, mcp(design="Tukey")))
model <- glm(response ~ sentiment * design * category, family=binomial(logit), data = exp1QualRate_long)
summary(model)
anova(model, test = 'Chisq')
summary(glht(model, mcp(rank="Tukey")))
a <- anova(model, test = 'Chisq')
summary(glht(a, mcp(rank="Tukey")))
library(multcomp)
summary(glht(my.mod, mcp(rank="Tukey")))
library(multcomp)
summary(glht(model, mcp(rank="Tukey")))
library(multcomp)
summary(glht(model, mcp(design="Tukey")))
library(multcomp)
summary(glht(model, mcp(sentiment="Tukey")))
model <- glm(response ~ sentiment * as.factor(design) * as.factor(category), family=binomial(logit), data = exp1QualRate_long)
summary(model)
anova(model, test = 'Chisq')
model <- glm(response ~ sentiment * as.factor(design) * as.factor(category), family=binomial(logit), data = exp1QualRate_long)
summary(glht(model, mcp(sentiment="Tukey")))
summary(glht(model, mcp(design="Tukey")))
model <- glm(response ~ sentiment * as.factor(design) * as.factor(category), family=binomial(logit), data = exp1QualRate_long)
summary(glht(model, mcp(sentiment="Tukey")))
summary(glht(model, mcp(category="Tukey")))
model <- glm(response ~ sentiment * design * category, family=binomial(logit), data = exp1QualRate_long)
summary(model)
anova(model, test = 'Chisq')
exp1QualRate_long %>%
filter(category == "aesthetic" & sentiment == "positive") %>%
group_by(design) %>%
summarise(n = n(),
rating = mean(response),
se = sd(response)/sqrt(n())) %>%
ggplot(aes(x = design, y = rating, fill = design,
ymin = rating - se * 1.96,
ymax = rating + se * 1.96)) +
geom_bar(stat = "identity",
width = 0.4) +
# error bars
geom_errorbar(width = 0.1,
position = position_dodge(0.5)) +
# label axis
labs(x = "design",
y = "frequency")
data <- exp1QualRate_long %>%
filter(category == "aesthetic" & sentiment == "positive")
model <- glm(response ~ design , family=binomial(logit), data = data)
anova(model)
summary(model)
model <- glm(response ~ sentiment * design, family=binomial(logit), data = subset(exp1QualRate_long, category == "aesthetics"))
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category == "aesthetics"))
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category == "aesthetic"))
summary(model)
anova(model, test = 'Chisq')
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "clarity"))
summary(model)
anova(model, test = 'Chisq')
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "aesthetic"))
summary(model)
anova(model, test = 'Chisq')
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "clarity"))
summary(model)
anova(model, test = 'Chisq')
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "aesthetics"))
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "aesthetic"))
summary(model)
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "clarity"))
summary(model)
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "professionalism"))
summary(model)
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "trustworthiness"))
summary(model)
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "aesthetic"))
summary(model)
anova(model, test = 'Chisq')
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "clarity"))
summary(model)
anova(model, test = 'Chisq')
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "professionalism"))
summary(model)
anova(model, test = 'Chisq')
model <- glm(response ~ sentiment * design, family=binomial(logit),
data = subset(exp1QualRate_long, exp1QualRate_long$category== "trustworthiness"))
summary(model)
anova(model, test = 'Chisq')
